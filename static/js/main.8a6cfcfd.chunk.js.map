{"version":3,"sources":["components/UI/Spinner/spinner.js","components/UI/search bar/searchhandler/searchresult.js","components/UI/search bar/searchBar.js","components/timestamp/timestamp.js","containers/graphs/totalcasesgraph/totalcasesGraph.js","containers/graphs/deceasedcasesgraph.js/deceasedcasesgraph.js","containers/graphs/recovered cases graph/recoveredcasesgraph.js","containers/graphs/graphs.js","containers/Table/table.js","components/head/head.js","containers/home page/homepage.js","App.js","serviceWorker.js","index.js"],"names":["spinner","props","className","SearchData","state","state_data","axios","get","then","response","setState","data","keys","this","key","districtData","console","log","cofirmed","React","Component","SearchBar","district","input","changeHandler","event","target","value","submitHandler","preventDefault","type","placeholder","onChange","onClick","searched","timestamp","map","info","statecode","lastupdatedtime","RecoveredCasesGraph","Data","res","date","confirmedcases","cases_time_series","forEach","element","push","totalconfirmed","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","width","height","options","scales","xAxes","display","maintainAspectRatio","title","text","fontSize","legend","position","DeceasedCasesGraph","totaldeceased","totalrecovered","Graphs","style","paddingTop","Table","total_data","statewise","slice","row","post","confirmed","active","recovered","deaths","total","head","header","textAlign","Homepage","posts","Total","loading","timeStamp","homepage","marginLeft","marginTop","margin","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a6cfcfd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst spinner=(props)=>{\r\n    return(\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default spinner;","import React from 'react';\r\nimport './searchresult.js';\r\nimport axios from 'axios';\r\n\r\n\r\nclass SearchData extends React.Component{\r\n    state={\r\n        state_data:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        axios.get('https://api.covid19india.org/state_district_wise.json')\r\n             .then(response=>{\r\n                    \r\n                    this.setState({state_data:response.data});\r\n                    \r\n                    \r\n             });\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        for(let keys in this.state.state_data){\r\n            if( keys==='Rajasthan'){\r\n                for(let key in this.state.state_data[keys].districtData){\r\n                    console.log(this.state.state_data[keys].districtData[key].cofirmed);\r\n                }\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchData","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './searchBar.css';\r\nimport SearchResult from './searchhandler/searchresult'\r\n\r\nclass SearchBar extends React.Component{\r\n    state={\r\n        district:'',\r\n        input:''\r\n    }\r\n\r\n    changeHandler=(event)=>{\r\n        this.setState({input:event.target.value});\r\n    };\r\n    \r\n    submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        this.setState({district:this.state.input});\r\n    }\r\n    \r\n    \r\n    render(){\r\n        console.log(this.state.district);\r\n        return(\r\n        <div className='Search'  >\r\n            <form>\r\n                <input type='text' className='SearchBar' placeholder='Search For Your District' onChange={this.changeHandler} />\r\n                <button className='placeholder' onClick={this.submitHandler}><i className=\"fa fa-search fa-2x\"></i></button>\r\n            </form>\r\n            <SearchResult searched={this.state.district}/>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './timestamp.css';\r\n\r\nconst timestamp=(props)=>{\r\n    return props.data.map(info=>{\r\n        return <div key={info.statecode}><strong>Last Updated On:{info.lastupdatedtime} </strong> </div>\r\n    });\r\n}\r\n\r\nexport default timestamp;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\n class RecoveredCasesGraph extends React.Component {\r\n    state = {\r\n        Data:{}\r\n      }\r\n      componentDidMount(){\r\n          axios.get('https://api.covid19india.org/data.json')\r\n          .then(res=>{\r\n              let date=[];\r\n              let confirmedcases=[];\r\n              res.data.cases_time_series.forEach(element => {\r\n                  date.push(element.date);\r\n                  confirmedcases.push(element.totalconfirmed)\r\n              });\r\n              this.setState({\r\n                  Data:{\r\n                        labels:date,\r\n                      datasets:[\r\n                          {\r\n                              data:confirmedcases,\r\n                              fill:false,\r\n                              lineTension:0.5,\r\n                              backgroundColor: 'sky',\r\n                              borderColor: 'red',\r\n                              borderWidth: 2,\r\n                          }\r\n                      ]\r\n                  }\r\n              })\r\n          })\r\n      }\r\n    \r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n         \r\n            <Line\r\n                width={100}\r\n                height={300}\r\n                data={this.state.Data}\r\n                options={{\r\n                    scales: {\r\n                        xAxes: [{\r\n                             display: false\r\n                        \r\n                            }]\r\n                     \r\n                    \r\n                 },\r\n                    \r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                      text:'Total Cases',\r\n                      fontSize:20,\r\n                    display:true,\r\n                    \r\n                    \r\n                    },\r\n                    legend:{\r\n                    display:false,\r\n                    position:'right'\r\n                 }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RecoveredCasesGraph;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n class DeceasedCasesGraph extends React.Component {\r\n    state = {\r\n        Data:{}\r\n      }\r\n      componentDidMount(){\r\n          axios.get('https://api.covid19india.org/data.json')\r\n          .then(res=>{\r\n              let date=[];\r\n              let confirmedcases=[];\r\n              res.data.cases_time_series.forEach(element => {\r\n                  date.push(element.date);\r\n                  confirmedcases.push(element.totaldeceased)\r\n              });\r\n              this.setState({\r\n                  Data:{\r\n                        labels:date,\r\n                      datasets:[\r\n                          {\r\n                              data:confirmedcases,\r\n                              fill:false,\r\n                              lineTension:0.5,\r\n                              backgroundColor: 'sky',\r\n                              borderColor: 'grey',\r\n                              borderWidth: 2,\r\n                          }\r\n                      ]\r\n                  }\r\n              })\r\n          })\r\n      }\r\n    \r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n         \r\n            <Line\r\n                width={100}\r\n                height={300}\r\n                data={this.state.Data}\r\n                options={{\r\n                    scales: {\r\n                        xAxes: [{\r\n                             display: false\r\n                        \r\n                            }]\r\n                     \r\n                    \r\n                 },\r\n                    \r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                    text:'Deceased Cases',\r\n                    fontSize:20,\r\n                    display:true,\r\n                    \r\n                    \r\n                    },\r\n                    legend:{\r\n                    display:false,\r\n                    position:'right'\r\n                 }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DeceasedCasesGraph;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n class RecoveredCasesGraph extends React.Component {\r\n    state = {\r\n        Data:{}\r\n      }\r\n      componentDidMount(){\r\n          axios.get('https://api.covid19india.org/data.json')\r\n          .then(res=>{\r\n              let date=[];\r\n              let confirmedcases=[];\r\n              res.data.cases_time_series.forEach(element => {\r\n                  date.push(element.date);\r\n                  confirmedcases.push(element.totalrecovered)\r\n              });\r\n              this.setState({\r\n                  Data:{\r\n                        labels:date,\r\n                      datasets:[\r\n                          {\r\n                              data:confirmedcases,\r\n                              fill:false,\r\n                              lineTension:0.5,\r\n                              backgroundColor: 'sky',\r\n                              borderColor: 'green',\r\n                              borderWidth: 2,\r\n                          }\r\n                      ]\r\n                  }\r\n              })\r\n          })\r\n      }\r\n    \r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n         \r\n            <Line\r\n                width={700}\r\n                height={300}\r\n                data={this.state.Data}\r\n                options={{\r\n                    scales: {\r\n                        xAxes: [{\r\n                             display: false\r\n                        \r\n                            }]\r\n                     \r\n                    \r\n                 },\r\n                    \r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                    text:'Recovered Cases',\r\n                    fontSize:20,\r\n                    display:true,\r\n                    \r\n                    \r\n                    },\r\n                    legend:{\r\n                    display:false,\r\n                    position:'right'\r\n                 }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RecoveredCasesGraph;","import React from 'react';\r\nimport './graph.css';\r\nimport TotalCasesGraph from'./totalcasesgraph/totalcasesGraph';\r\nimport DeceasedCasesGraph from'./deceasedcasesgraph.js/deceasedcasesgraph';\r\nimport RecoveredCasesGraph from'./recovered cases graph/recoveredcasesgraph';\r\n\r\n\r\nclass Graphs extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='Graphs'>\r\n                <div style={{paddingTop:'5%'}}><TotalCasesGraph /></div>\r\n                <div style={{paddingTop:'5%'}}><RecoveredCasesGraph/></div>\r\n                <div style={{paddingTop:'5%'}}><DeceasedCasesGraph/></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Graphs;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './table.css';\r\n\r\nclass Table extends React.Component{\r\n\r\n   state={\r\n       state_data:[],\r\n       total_data:[]\r\n   }\r\n\r\n   componentDidMount(){\r\n\r\n    axios.get(\"https://api.covid19india.org/data.json\")\r\n          .then(response=>{\r\n            \r\n            this.setState({state_data:response.data.statewise.slice(1,38) });\r\n            this.setState({total_data:response.data.statewise.slice(0,1)});            \r\n            \r\n            console.log(this.state.state_data);\r\n            console.log(this.state.total_data[0]);\r\n            \r\n          });\r\n  }\r\n\r\n    render(){\r\n\r\n        const row=this.state.state_data.map(post=>{\r\n             return( \r\n                    \r\n                    <tr key={post.statecode} >\r\n                        <td className='States'>{post.state}</td>\r\n                        <td className='Confirmed'>{post.confirmed}</td>\r\n                        <td className='Active'>{post.active}</td>\r\n                        <td className='Recovered'>{post.recovered}</td>\r\n                        <td className='Deaths'>{post.deaths}</td>\r\n                    </tr>\r\n                \r\n                );\r\n          });\r\n\r\n          const total=this.state.total_data.map(post=>{\r\n            return( \r\n                   \r\n                   <tr key={post.statecode}>\r\n                       <td className='States' >{post.state}</td>\r\n                       <td className='Confirmed'>{post.confirmed}</td>\r\n                       <td className='Active'>{post.active}</td>\r\n                       <td className='Recovered'>{post.recovered}</td>\r\n                       <td className='Deaths'>{post.deaths} </td>\r\n                   </tr>\r\n               \r\n               );\r\n         });\r\n\r\n        return(\r\n            <table >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <div>\r\n                                <abbr>STATE/UT</abbr>\r\n                            </div>\r\n                        </th>\r\n                    \r\n                   \r\n                        <th>\r\n                            <div>\r\n                                <abbr>CONFIRMED</abbr>\r\n                            </div>\r\n                        </th>\r\n                    \r\n                    \r\n                        <th>\r\n                            <div>\r\n                                <abbr>ACTIVE</abbr>\r\n                            </div>\r\n                        </th>\r\n                    \r\n                    \r\n                        <th>\r\n                            <div>\r\n                                <abbr>RECOVERED</abbr>\r\n                            </div>\r\n                        </th>\r\n                    \r\n                        <th>\r\n                            <div>\r\n                                <abbr>DECEASED</abbr>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {row}\r\n                </tbody>\r\n                <tbody>\r\n                    {total}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './head.css';\r\n\r\nconst head=(props)=>{\r\n\r\n    const header=props.data.map(info=>{\r\n        return(\r\n            <div className='Head' key={info.statecode}>\r\n                <section className='ConfirmedData'>\r\n                    <h1 style={{textAlign:'left' ,fontSize:'100%'}}>Confirmed</h1>\r\n                    <div style={{fontSize:'175%'}}>{info.confirmed}</div>\r\n                </section>\r\n                <section className='ActiveData'>\r\n                    <h1 style={{textAlign:'left',fontSize:'100%'}}>Active</h1>\r\n                    <div style={{fontSize:'175%'}}>{info.active}</div>\r\n                </section>\r\n                <section className='RecoveredData'>\r\n                    <h1 style={{textAlign:'left',fontSize:'100%'}}>Recovered</h1>\r\n                    <div style={{fontSize:'175%'}}>{info.recovered}</div>\r\n                </section>\r\n                <section className='DeathsData'>\r\n                    <h1 style={{textAlign:'left',fontSize:'100%'}}>Deaths</h1>\r\n                    <div style={{fontSize:'175%'}}>{info.deaths}</div>\r\n                </section>\r\n            </div>\r\n        );\r\n    })\r\n    return(\r\n        <div className='Header'>\r\n            {header}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default head;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/Spinner/spinner';\r\nimport SearchBar from '../../components/UI/search bar/searchBar';\r\nimport TimeStamp from '../../components/timestamp/timestamp';\r\nimport Graphs from '../../containers/graphs/graphs';\r\nimport Table from '../../containers/Table/table';\r\nimport Head from '../../components/head/head';\r\nimport './homepage.css';\r\n\r\n\r\n\r\n\r\nclass Homepage extends React.Component{\r\n    state={\r\n        posts:[],\r\n        Total:[],\r\n        labels:[],\r\n        loading:true\r\n       \r\n      }\r\n      \r\n    \r\n      componentDidMount(){\r\n    \r\n        axios.get(\"https://api.covid19india.org/data.json\")\r\n              .then(response=>{\r\n                \r\n                this.setState({posts:response.data.statewise.slice(1,38) });\r\n                this.setState({Total:response.data.statewise.slice(0,1)}); \r\n                this.setState({timeStamp:response.data.statewise.slice(0,1).lastupdatedtime});\r\n                this.setState({loading:false})\r\n              });\r\n      }\r\n    render(){\r\n\r\n        let homepage=<div style={{marginLeft:'49%',marginTop:'20%'}}><Spinner/></div>;\r\n        if(!this.state.loading){\r\n            return homepage=<div className=\"App\">\r\n               \r\n            <div style={{textAlign:'left'}}>\r\n              <TimeStamp data={this.state.Total} />\r\n              <Head data={this.state.Total}/>\r\n            </div>\r\n    \r\n            <div className='Content'>\r\n              <Table/> \r\n              <div style={{marginTop:'200px'}}> <SearchBar/> <Graphs style={{margin:'30px'}}/></div>\r\n            </div>\r\n           \r\n          </div>\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {homepage}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Homepage;","import React from 'react';\nimport HomePage from './containers/home page/homepage';\nimport SearchResult from './components/UI/search bar/searchhandler/searchresult';\nimport './App.css';\n\nclass App extends React.Component {\n\n\n\n  render(){\n   \n   \n    \n    return (\n     <div>\n       <HomePage/>\n       <SearchResult/>\n     </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}