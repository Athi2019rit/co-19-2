{"version":3,"sources":["components/UI/Spinner/spinner.js","components/UI/search bar/searchhandler/searchresult.js","components/UI/search bar/searchBar.js","components/timestamp/timestamp.js","containers/graphs/totalcasesgraph/totalcasesGraph.js","containers/graphs/deceasedcasesgraph.js/deceasedcasesgraph.js","containers/graphs/recovered cases graph/recoveredcasesgraph.js","containers/graphs/graphs.js","containers/Table/table.js","components/head/head.js","containers/home page/homepage.js","components/UI/navbar/navbar.js","App.js","serviceWorker.js","index.js"],"names":["spinner","props","className","SearchData","state","state_data","district_data","district_name","district_cases","capitalizeFirstLetter","str","charAt","toUpperCase","slice","searchDeleteHandler","setState","district","prevProps","searched","this","axios","get","then","response","data","names","cases","keys","key","districtData","push","confirmed","search","districtCases","length","map","name","index","number","i","datas","style","display","padding","textAlign","marginLeft","onClick","aria-hidden","color","fontSize","paddingLeft","React","Component","SearchBar","input","changeHandler","event","preventDefault","target","value","submitHandler","type","placeholder","onChange","timestamp","info","statecode","lastupdatedtime","RecoveredCasesGraph","Data","res","date","confirmedcases","cases_time_series","forEach","element","totalconfirmed","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","width","height","options","scales","xAxes","maintainAspectRatio","title","text","fontColor","legend","position","DeceasedCasesGraph","totaldeceased","totalrecovered","Graphs","paddingTop","Table","total_data","statewise","console","log","row","post","active","recovered","deaths","total","borderBottom","head","header","marginBottom","Homepage","posts","Total","loading","timeStamp","homepage","marginTop","margin","NavBar","paddingRight","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.829be78a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst spinner=(props)=>{\r\n    return(\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default spinner;","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './searchresult.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass SearchData extends React.Component{\r\n    state={\r\n        state_data:[],\r\n        district_data:[\r\n            {district_name:[]},\r\n            {district_cases:[]}\r\n        ]\r\n       \r\n        \r\n    }\r\n    capitalizeFirstLetter=(str)=> {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }\r\n      searchDeleteHandler=()=>{\r\n        this.setState({\r\n            district_data:[\r\n                {district_name:[]},\r\n                {district_cases:[]}\r\n            ],\r\n            district:''\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.searched!==this.props.searched ){\r\n            axios.get('https://api.covid19india.org/state_district_wise.json')\r\n            .then(response=>{\r\n                    \r\n                    this.setState({state_data:response.data});\r\n                    \r\n                    let names=[];\r\n                    let cases=[];\r\n                    for(let keys in this.state.state_data){\r\n                        if( keys=== this.capitalizeFirstLetter(this.props.searched)){\r\n                            for(let key in this.state.state_data[keys].districtData){\r\n                                \r\n                                names.push(key);\r\n                                cases.push(this.state.state_data[keys].districtData[key].confirmed);\r\n                            \r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n                    this.setState({\r\n                        district_data:[\r\n                            {district_name:names},\r\n                            {district_cases:cases}\r\n                        ]\r\n                    });\r\n                    \r\n                    \r\n                    \r\n                }         \r\n            );\r\n        }\r\n    }\r\n \r\n\r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n    render(){\r\n       \r\n        let search=null;\r\n        let districtCases=null;\r\n        if(this.state.district_data[1].district_cases.length){\r\n            districtCases=this.state.district_data[0].district_name.map((name,index)=>{\r\n               return this.state.district_data[1].district_cases.map((number,i)=>{\r\n                   let datas=null;\r\n                    if(index===i){\r\n                                datas= <tr key={index}> \r\n                                            <td><strong>{name}</strong></td>\r\n                                            <td>{number}</td>\r\n                                        </tr>\r\n                                }\r\n                            return datas\r\n                 })\r\n           \r\n               \r\n              })\r\n              \r\n           search=( <div >\r\n           \r\n           <div style={{display:'flex'}} >\r\n               \r\n               <table style={{padding:'0px'}}>\r\n                    <thead >\r\n                    <tr><th></th><th style={{textAlign:'right',marginLeft:'30%'}}> <button onClick={this.searchDeleteHandler} ><i className=\"fa fa-times fa-lg\" aria-hidden=\"true\" style={{color:'#726B6B'}}></i></button></th></tr>\r\n                        <tr>\r\n                            <th style={{fontSize:'20px'}}>\r\n                                District\r\n                            </th>\r\n                           \r\n                            <th style={{fontSize:'20px'}}>\r\n                             No. Of Cases\r\n                         </th>\r\n                        \r\n                        </tr>\r\n                       \r\n                    </thead>\r\n                    <tbody>\r\n                       {districtCases}\r\n                    </tbody>\r\n                </table>\r\n               \r\n            </div>\r\n            </div>);\r\n        }\r\n\r\n        \r\n        return(\r\n           <div>\r\n                 <div style={{paddingLeft:'30%'}} >\r\n                        {search}\r\n                 </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchData","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './searchBar.css';\r\nimport Searchresult from './searchhandler/searchresult';\r\n\r\nclass SearchBar extends React.Component{\r\n    state={\r\n        district:'',\r\n        input:'Search For Your State',\r\n        \r\n    }\r\n\r\n    changeHandler=(event)=>{\r\n        event.preventDefault();\r\n        this.setState({input:event.target.value});\r\n    };\r\n    \r\n    submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        this.setState({district:this.state.input});\r\n    }\r\n    \r\n\r\n    \r\n    \r\n    \r\n    render(){\r\n       \r\n           \r\n         \r\n        \r\n        \r\n        return(\r\n        <div className='Search'  >\r\n            <form>\r\n                <input type='text'  className='SearchBar' placeholder='Search For Your State' onChange={this.changeHandler} />\r\n                <button className='placeholder' onClick={this.submitHandler}><i className=\"fa fa-search fa-2x\"></i></button>\r\n            </form>\r\n           <Searchresult searched={this.state.district}/>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './timestamp.css';\r\n\r\nconst timestamp=(props)=>{\r\n    return props.data.map(info=>{\r\n        return <div key={info.statecode} className='TimeStamp'><strong>Last Updated On:{info.lastupdatedtime} </strong> </div>\r\n    });\r\n}\r\n\r\nexport default timestamp;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\n class RecoveredCasesGraph extends React.Component {\r\n    state = {\r\n        Data:{}\r\n      }\r\n      componentDidMount(){\r\n          axios.get('https://api.covid19india.org/data.json')\r\n          .then(res=>{\r\n              let date=[];\r\n              let confirmedcases=[];\r\n              res.data.cases_time_series.forEach(element => {\r\n                  date.push(element.date);\r\n                  confirmedcases.push(element.totalconfirmed)\r\n              });\r\n              this.setState({\r\n                  Data:{\r\n                        labels:date,\r\n                      datasets:[\r\n                          {\r\n                              data:confirmedcases,\r\n                              fill:false,\r\n                              lineTension:0.5,\r\n                              backgroundColor: 'sky',\r\n                              borderColor: 'red',\r\n                              borderWidth: 2,\r\n                          }\r\n                      ]\r\n                  }\r\n              })\r\n          })\r\n      }\r\n    \r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n         \r\n            <Line\r\n                width={100}\r\n                height={300}\r\n                data={this.state.Data}\r\n                options={{\r\n                    scales: {\r\n                        xAxes: [{\r\n                             display: false\r\n                        \r\n                            }]\r\n                     \r\n                    \r\n                 },\r\n                    \r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                      text:'Total Cases',\r\n                      fontSize:25,\r\n                      fontColor:'black',\r\n                    display:true,\r\n                    \r\n                    \r\n                    },\r\n                    legend:{\r\n                    display:false,\r\n                    position:'right'\r\n                 }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RecoveredCasesGraph;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n class DeceasedCasesGraph extends React.Component {\r\n    state = {\r\n        Data:{}\r\n      }\r\n      componentDidMount(){\r\n          axios.get('https://api.covid19india.org/data.json')\r\n          .then(res=>{\r\n              let date=[];\r\n              let confirmedcases=[];\r\n              res.data.cases_time_series.forEach(element => {\r\n                  date.push(element.date);\r\n                  confirmedcases.push(element.totaldeceased)\r\n              });\r\n              this.setState({\r\n                  Data:{\r\n                        labels:date,\r\n                      datasets:[\r\n                          {\r\n                              data:confirmedcases,\r\n                              fill:false,\r\n                              lineTension:0.5,\r\n                              backgroundColor: 'sky',\r\n                              borderColor: 'grey',\r\n                              borderWidth: 2,\r\n                          }\r\n                      ]\r\n                  }\r\n              })\r\n          })\r\n      }\r\n    \r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n         \r\n            <Line\r\n                width={100}\r\n                height={300}\r\n                data={this.state.Data}\r\n                options={{\r\n                    scales: {\r\n                        xAxes: [{\r\n                             display: false\r\n                        \r\n                            }]\r\n                     \r\n                    \r\n                 },\r\n                    \r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                    text:'Deceased Cases',\r\n                    fontColor:'black',\r\n                    fontSize:25,\r\n                    display:true,\r\n                    \r\n                    \r\n                    },\r\n                    legend:{\r\n                    display:false,\r\n                    position:'right'\r\n                 }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DeceasedCasesGraph;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n class RecoveredCasesGraph extends React.Component {\r\n    state = {\r\n        Data:{}\r\n      }\r\n      componentDidMount(){\r\n          axios.get('https://api.covid19india.org/data.json')\r\n          .then(res=>{\r\n              let date=[];\r\n              let confirmedcases=[];\r\n              res.data.cases_time_series.forEach(element => {\r\n                  date.push(element.date);\r\n                  confirmedcases.push(element.totalrecovered)\r\n              });\r\n              this.setState({\r\n                  Data:{\r\n                        labels:date,\r\n                      datasets:[\r\n                          {\r\n                              data:confirmedcases,\r\n                              fill:false,\r\n                              lineTension:0.5,\r\n                              backgroundColor: 'sky',\r\n                              borderColor: 'green',\r\n                              borderWidth: 2,\r\n                          }\r\n                      ]\r\n                  }\r\n              })\r\n          })\r\n      }\r\n    \r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n         \r\n            <Line\r\n                width={700}\r\n                height={300}\r\n                data={this.state.Data}\r\n                options={{\r\n                    scales: {\r\n                        xAxes: [{\r\n                             display: false\r\n                        \r\n                            }]\r\n                     \r\n                    \r\n                 },\r\n                    \r\n                    maintainAspectRatio:false,\r\n                    title:{\r\n                    text:'Recovered Cases',\r\n                    fontColor:'black',\r\n                    fontSize:25,\r\n                    display:true,\r\n                    \r\n                    \r\n                    },\r\n                    legend:{\r\n                    display:false,\r\n                    position:'right'\r\n                 }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RecoveredCasesGraph;","import React from 'react';\r\nimport './graph.css';\r\nimport TotalCasesGraph from'./totalcasesgraph/totalcasesGraph';\r\nimport DeceasedCasesGraph from'./deceasedcasesgraph.js/deceasedcasesgraph';\r\nimport RecoveredCasesGraph from'./recovered cases graph/recoveredcasesgraph';\r\n\r\n\r\nclass Graphs extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='Graphs'>\r\n                <div style={{paddingTop:'5%'}}><TotalCasesGraph /></div>\r\n                <div style={{paddingTop:'5%'}}><RecoveredCasesGraph/></div>\r\n                <div style={{paddingTop:'5%'}}><DeceasedCasesGraph/></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Graphs;","import React from 'react';\r\nimport axios from 'axios';\r\nimport './table.css';\r\n\r\nclass Table extends React.Component{\r\n\r\n   state={\r\n       state_data:[],\r\n       total_data:[]\r\n   }\r\n\r\n   componentDidMount(){\r\n\r\n    axios.get(\"https://api.covid19india.org/data.json\")\r\n          .then(response=>{\r\n            \r\n            this.setState({state_data:response.data.statewise.slice(1,38) });\r\n            this.setState({total_data:response.data.statewise.slice(0,1)});            \r\n            \r\n            console.log(this.state.state_data);\r\n            console.log(this.state.total_data[0]);\r\n            \r\n          });\r\n  }\r\n\r\n    render(){\r\n\r\n        const row=this.state.state_data.map(post=>{\r\n             return( \r\n                    \r\n                    <tr key={post.statecode} >\r\n                        <td className='States'>{post.state}</td>\r\n                        <td className='Confirmed'>{post.confirmed}</td>\r\n                        <td className='Active'>{post.active}</td>\r\n                        <td className='Recovered'>{post.recovered}</td>\r\n                        <td className='Deaths'>{post.deaths}</td>\r\n                    </tr>\r\n                \r\n                );\r\n          });\r\n\r\n          const total=this.state.total_data.map(post=>{\r\n            return( \r\n                   \r\n                   <tr key={post.statecode}>\r\n                       <td className='States' >{post.state}</td>\r\n                       <td className='Confirmed'>{post.confirmed}</td>\r\n                       <td className='Active'>{post.active}</td>\r\n                       <td className='Recovered'>{post.recovered}</td>\r\n                       <td className='Deaths'>{post.deaths} </td>\r\n                   </tr>\r\n               \r\n               );\r\n         });\r\n\r\n        return(\r\n            <table >\r\n                <thead style={{borderBottom:\"1px solid black\"}}>\r\n                    <tr style={{fontSize:'18px'}}>\r\n                        <th >\r\n                            \r\n                                STATE/UT\r\n                            \r\n                        </th>\r\n                    \r\n                   \r\n                        <th>\r\n                            \r\n                                CONFIRMED\r\n                            \r\n                        </th>\r\n                    \r\n                    \r\n                        <th>\r\n                            \r\n                                ACTIVE\r\n                            \r\n                        </th>\r\n                    \r\n                    \r\n                        <th>\r\n                            \r\n                                RECOVERED\r\n                            \r\n                        </th>\r\n                    \r\n                        <th>\r\n                            \r\n                                DECEASED\r\n                            \r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {row}\r\n                </tbody>\r\n                <tbody>\r\n                    {total}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nimport './head.css';\r\n\r\nconst head=(props)=>{\r\n\r\n    const header=props.data.map(info=>{\r\n        return(\r\n            <div className='Head' key={info.statecode}>\r\n                \r\n                <section className='ConfirmedData'>\r\n                    <h1 style={{textAlign:'left' ,fontSize:'100%',marginLeft:'10%',marginBottom:'4%'}} >Confirmed</h1>\r\n                    <div style={{fontSize:'175%',textAlign:'left',marginLeft:'10%',marginBottom:'4%' }}>{info.confirmed}</div>\r\n                </section>\r\n                <section className='ActiveData'>\r\n                    <h1 style={{textAlign:'left',fontSize:'100%',marginLeft:'10%',marginBottom:'4%'}}>Active</h1>\r\n                    <div style={{fontSize:'175%',textAlign:'left',marginLeft:'10%',marginBottom:'4%'}}>{info.active}</div>\r\n                </section>\r\n                <section className='RecoveredData'>\r\n                    <h1 style={{textAlign:'left',fontSize:'100%',marginLeft:'10%',marginBottom:'4%'}}>Recovered</h1>\r\n                    <div style={{fontSize:'175%',textAlign:'left',marginLeft:'10%',marginBottom:'4%'}}>{info.recovered}</div>\r\n                </section>\r\n                <section className='DeathsData'>\r\n                    <h1 style={{textAlign:'left',fontSize:'100%',marginLeft:'10%',marginBottom:'4%'}}>Deaths</h1>\r\n                    <div style={{fontSize:'175%',textAlign:'left',marginLeft:'10%',marginBottom:'4%'}}>{info.deaths}</div>\r\n                </section>\r\n            </div>\r\n        );\r\n    })\r\n    return(\r\n        <div className='Header'>\r\n            {header}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default head;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/Spinner/spinner';\r\nimport SearchBar from '../../components/UI/search bar/searchBar';\r\nimport TimeStamp from '../../components/timestamp/timestamp';\r\nimport Graphs from '../../containers/graphs/graphs';\r\nimport Table from '../../containers/Table/table';\r\nimport Head from '../../components/head/head';\r\nimport './homepage.css';\r\n\r\n\r\n\r\n\r\nclass Homepage extends React.Component{\r\n    state={\r\n        posts:[],\r\n        Total:[],\r\n        labels:[],\r\n        loading:true\r\n       \r\n      }\r\n      \r\n    \r\n      componentDidMount(){\r\n    \r\n        axios.get(\"https://api.covid19india.org/data.json\")\r\n              .then(response=>{\r\n                \r\n                this.setState({posts:response.data.statewise.slice(1,38) });\r\n                this.setState({Total:response.data.statewise.slice(0,1)}); \r\n                this.setState({timeStamp:response.data.statewise.slice(0,1).lastupdatedtime});\r\n                this.setState({loading:false})\r\n              });\r\n      }\r\n    render(){\r\n\r\n        let homepage=<div style={{marginLeft:'49%',marginTop:'20%'}}><Spinner/></div>;\r\n        if(!this.state.loading){\r\n            return homepage=<div className=\"App\">\r\n               \r\n            <div style={{textAlign:'center',marginLeft:'-75px'}}>\r\n              \r\n              <Head data={this.state.Total}/>\r\n              \r\n            </div>\r\n    \r\n            <div className='Content'>\r\n            \r\n              <Table/> \r\n              \r\n              <div style={{marginTop:'8%'}}> <TimeStamp data={this.state.Total} /><SearchBar/> <Graphs style={{margin:'30px'}}/></div>\r\n            </div>\r\n           \r\n          </div>\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {homepage}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Homepage;","import React from 'react';\r\nimport './navbar.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass NavBar extends React.Component{\r\n\r\n   \r\n    render(){\r\n        return(\r\n            <div className='NavBar' style={{display:'flex',padding:'15px' }}   >\r\n                <div style={{textAlign:'left'}}>\r\n                    <button className='home' style={{textAlign:'left'}}><i className=\"fa fa-home fa-2x\"></i></button>\r\n                </div>\r\n                <div style={{textAlign:'right',paddingLeft:'70%',paddingTop:'10px'}}>\r\n                    <div className='icons' style={{display:'flex'}}>                \r\n                        <button className='Faq' style={{textAlign:'right'}}><i className=\"fa fa-question-circle\" aria-hidden=\"true\"></i> FAQs</button>\r\n                        <button className=' suggestion' style={{textAlign:'right',paddingLeft:'0px',paddingRight:'0px'}}><i className=\"fa fa-lightbulb-o\" aria-hidden=\"true\"></i> SUGGESTIONS</button>\r\n                        <button className='about' style={{textAlign:'right',paddingLeft:'0px'}}>ABOUT </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NavBar;","import React from 'react';\nimport HomePage from './containers/home page/homepage';\nimport NavBar from './components/UI/navbar/navbar';\nimport './App.css';\n\nclass App extends React.Component {\n\n\n\n  render(){\n   \n   \n    \n    return (\n     <div>\n       <NavBar/>\n       <HomePage/>\n       \n     </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}